{"ast":null,"code":"import { Product } from '../model/product';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../product/product.component\";\nfunction ProductListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"app-product\", 3);\n    i0.ɵɵlistener(\"changeQuantity\", function ProductListComponent_div_1_Template_app_product_changeQuantity_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onChangeQuantity($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"product\", product_r1);\n  }\n}\nexport class ProductListComponent {\n  constructor() {\n    // Initializing products array\n    this.products = [new Product(1, \"Test Product - 1\", \"http://via.placeholder.com/150x150\", 85, true), new Product(2, \"Test Product - 2\", \"http://via.placeholder.com/150x150\", 65, false), new Product(3, \"Test Product - 3\", \"http://via.placeholder.com/150x150\", 99, true)];\n  }\n  // Method to handle output event from product component\n  onChangeQuantity(pc) {\n    // Find product in array\n    let product = this.products.find(prod => {\n      return prod.id === pc.product.id;\n    });\n    // If product is found, increase or decrease quantity\n    if (product) {\n      product.quantity += pc.amountChange;\n    } else {\n      console.log(\"Something strange happenend!\");\n    }\n  }\n}\nProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n  return new (t || ProductListComponent)();\n};\nProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductListComponent,\n  selectors: [[\"app-product-list\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"row\", \"d-flex\", \"justify-content-around\"], [\"class\", \"col-12 col-lg-4 col-md-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"col-lg-4\", \"col-md-6\"], [3, \"product\", \"changeQuantity\"]],\n  template: function ProductListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ProductListComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.products);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ProductComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,kBAAkB;;;;;;;ICAtCC,8BAAsF;IACjDA;MAAAA;MAAA;MAAA,OAAkBA,8CAAwB;IAAA,EAAC;IAC5EA,iBAAc;;;;IADDA,eAAmB;IAAnBA,oCAAmB;;;ADOxC,OAAM,MAAOC,oBAAoB;EAK/BC;IACE;IACA,IAAI,CAACC,QAAQ,GAAG,CACd,IAAIJ,OAAO,CAAC,CAAC,EAAE,kBAAkB,EAAE,oCAAoC,EAAE,EAAE,EAAE,IAAI,CAAC,EAClF,IAAIA,OAAO,CAAC,CAAC,EAAE,kBAAkB,EAAE,oCAAoC,EAAE,EAAE,EAAE,KAAK,CAAC,EACnF,IAAIA,OAAO,CAAC,CAAC,EAAE,kBAAkB,EAAE,oCAAoC,EAAE,EAAE,EAAE,IAAI,CAAC,CACnF;EACH;EAEA;EACAK,gBAAgB,CAACC,EAAyB;IACxC;IACA,IAAIC,OAAO,GAAG,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAEC,IAAI,IAAI;MACxC,OAAOA,IAAI,CAACC,EAAE,KAAKJ,EAAE,CAACC,OAAO,CAACG,EAAE;IAClC,CAAC,CAAC;IACF;IACA,IAAGH,OAAO,EAAC;MACTA,OAAO,CAACI,QAAQ,IAAIL,EAAE,CAACM,YAAY;KACpC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;;EAG/C;;AA3BWZ,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTjClB,8BAA+C;MAC3CA,qEAGM;MAEVA,iBAAM;;;MALwDA,eAAa;MAAbA,sCAAa","names":["Product","i0","ProductListComponent","constructor","products","onChangeQuantity","pc","product","find","prod","id","quantity","amountChange","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/dejang/Workspace Teaching/Advanced-Web-Programming/Exercises 6/ecommerce/src/app/product-list/product-list.component.ts","/home/dejang/Workspace Teaching/Advanced-Web-Programming/Exercises 6/ecommerce/src/app/product-list/product-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Product } from '../model/product';\nimport { ProductQuantityChange } from '../model/product-quantity-change';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent {\n\n  // Array of products\n  products: Array<Product>;\n\n  constructor(){\n    // Initializing products array\n    this.products = [\n      new Product(1, \"Test Product - 1\", \"http://via.placeholder.com/150x150\", 85, true),\n      new Product(2, \"Test Product - 2\", \"http://via.placeholder.com/150x150\", 65, false),\n      new Product(3, \"Test Product - 3\", \"http://via.placeholder.com/150x150\", 99, true)\n    ]\n  }\n  \n  // Method to handle output event from product component\n  onChangeQuantity(pc: ProductQuantityChange) {\n    // Find product in array\n    let product = this.products.find((prod) => {\n      return prod.id === pc.product.id;\n    });\n    // If product is found, increase or decrease quantity\n    if(product){\n      product.quantity += pc.amountChange;\n    } else {\n      console.log(\"Something strange happenend!\")\n    }\n    \n  }\n}\n","<div class=\"row d-flex justify-content-around\">\n    <div class=\"col-12 col-lg-4 col-md-6\" *ngFor=\"let product of products; let i = index\">\n        <app-product [product]=\"product\" (changeQuantity)=\"onChangeQuantity($event)\">\n        </app-product>\n    </div>\n    \n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}